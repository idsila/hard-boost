const axios = require('axios');

const inv = {
  update_id: 61148358,
  update_type: 'invoice_paid',
  request_date: '2025-08-23T09:36:31.714Z',
  payload: {
    invoice_id: 32245580,
    hash: 'IVlnTEHUS9gr',
    currency_type: 'crypto',
    asset: 'USDT',
    amount: '1.5',
    paid_asset: 'USDT',
    paid_amount: '1.5',
    fee_asset: 'USDT',
    fee_amount: '0.045',
    fee: '0.045',
    fee_in_usd: '0.04497996',
    pay_url: 'https://t.me/CryptoBot?start=IVlnTEHUS9gr',
    bot_invoice_url: 'https://t.me/CryptoBot?start=IVlnTEHUS9gr',
    mini_app_invoice_url: 'https://t.me/CryptoBot/app?startapp=invoice-IVlnTEHUS9gr&mode=compact',
    web_app_invoice_url: 'https://app.cr.bot/invoices/IVlnTEHUS9gr',
    description: '–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä #123',
    status: 'paid',
    created_at: '2025-08-23T09:28:15.220Z',
    allow_comments: true,
    allow_anonymous: true,
    paid_usd_rate: '0.99955478',
    usd_rate: '0.99955478',
    paid_at: '2025-08-23T09:36:31.568Z',
    paid_anonymously: false
  }
}

const inv_2 = {
  update_id: 61148358,
  update_type: 'invoice_paid',
  request_date: '2025-08-23T09:36:31.714Z',
  payload: {
    invoice_id: 32248540,
    hash: 'IVlnTEHUS9gr',
    currency_type: 'crypto',
    asset: 'USDT',
    amount: '100',
    paid_asset: 'USDT',
    paid_amount: '1.5',
    fee_asset: 'USDT',
    fee_amount: '0.045',
    fee: '0.045',
    fee_in_usd: '0.04497996',
    pay_url: 'https://t.me/CryptoBot?start=IVlnTEHUS9gr',
    bot_invoice_url: 'https://t.me/CryptoBot?start=IVlnTEHUS9gr',
    mini_app_invoice_url: 'https://t.me/CryptoBot/app?startapp=invoice-IVlnTEHUS9gr&mode=compact',
    web_app_invoice_url: 'https://app.cr.bot/invoices/IVlnTEHUS9gr',
    description: '–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä #123',
    status: 'paid',
    created_at: '2025-08-23T09:28:15.220Z',
    allow_comments: true,
    allow_anonymous: true,
    paid_usd_rate: '0.99955478',
    usd_rate: '0.99955478',
    paid_at: '2025-08-23T09:36:31.568Z',
    paid_anonymously: false
  }
}





const inv_3 = {
  update_id: 61158494,
  update_type: 'invoice_paid',
  request_date: '2025-08-23T10:58:12.902Z',
  payload: {
    invoice_id: 32249668,
    hash: 'IV0MxlFpYRK5',
    currency_type: 'fiat',
    fiat: 'RUB',
    amount: '100',
    paid_asset: 'USDT',
    paid_amount: '1.24192786',
    paid_fiat_rate: '80.52098473',
    accepted_assets: [ 'USDT' ],
    fee_asset: 'USDT',
    fee_amount: '0.0372578358',
    fee: '0.0372578358',
    fee_in_usd: '0.03724397',
    pay_url: 'https://t.me/CryptoBot?start=IV0MxlFpYRK5',
    bot_invoice_url: 'https://t.me/CryptoBot?start=IV0MxlFpYRK5',
    mini_app_invoice_url: 'https://t.me/CryptoBot/app?startapp=invoice-IV0MxlFpYRK5&mode=compact',
    web_app_invoice_url: 'https://app.cr.bot/invoices/IV0MxlFpYRK5',
    description: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ 100‚ÇΩ',
    status: 'paid',
    created_at: '2025-08-23T10:50:22.228Z',
    allow_comments: true,
    allow_anonymous: true,
    paid_usd_rate: '0.99962799',
    usd_rate: '0.99962799',
    paid_at: '2025-08-23T10:58:12.810Z',
    paid_anonymously: false
  }
}


// axios.post('https://480b515b-0c75-494d-89a2-b88565776bc3-00-23dxbkc3tpwcp.picard.replit.dev:3000/pay', 
//   inv_3
//   , {  headers: { 'Content-Type':'application/json' } }).then(res => {
//   console.log(res)
// })



axios.post('http://localhost:3000/send-user', 
  {
    id: 7502494374,
    msg: `‚ú® <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n<blockquote>‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥—ã
‚Ä¢ –ù–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç

‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫
‚Ä¢ –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–æ–∫ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
‚Ä¢ –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º

‚Ä¢ –û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏
‚Ä¢ –û–ø–ª–∞—Ç–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π
‚Ä¢ –û–ø–ª–∞—Ç–∞ –ÆMoney

‚Ä¢ –ü–æ–∫—É–ø–∞ –∑–≤–µ–∑–¥
‚Ä¢ –ü–æ–∫—É–ø–∫–∞ –Ω–∞–∫—Ä—É—Ç–∫–∏

‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–∑–∞–≥—Ä—ã—à–µ–π
‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å —Ç–∏–∫—Ç–æ–∫–∞
</blockquote>\nüì± <b>–ú–∏–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b>\n<blockquote>‚Ä¢ –ö–æ–ø–∏—è –∫–ª–∏–∫–µ—Ä–∞ Notcoin
‚Ä¢ –ö–æ–ø–∏—è —Ñ–µ–π–∫ –∫–∞–∑–∏–Ω–æ
‚Ä¢ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–∏
</blockquote>`
  }
  , {  headers: { 'Content-Type':'application/json' } }).then(res => {
  console.log(res)
})